########################################################################
#    Check that your secret is available before running a full job !   #
########################################################################


name: "Variable/Secret checker"

on:
  push:

jobs:
  ############################################
  init1:
    name: "Test if variable was found"
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      result: ${{ steps.step1.outputs.result }}
    steps:
      - id: step1
        run: echo "result=1" >> "$GITHUB_OUTPUT"
  result1:
    name: "Should run #1"
    runs-on: ubuntu-latest
    # Map a step output to a job output
    needs: init1
    steps:
      - id: step1
        run: exit 0
  ############################################

  ############################################
  init2:
    name: "Test if variable wasn't found"
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      result: ${{ steps.step1.outputs.result }}
    steps:
      - id: step1
        run: echo "result=0" >> "$GITHUB_OUTPUT"
        
  result2:
    name: "Shouln't run #1"
    runs-on: ubuntu-latest
    # Map a step output to a job output
    needs: init2
    if: ${{needs.init2.outputs.output1 == 1}}
    steps:
      - id: step1
        run: exit -1
  ############################################

  ############################################
  exist:
    name: "Secret should exist"
    runs-on: ubuntu-latest
    steps:
      - env:
          secr: ${{secrets.EXIST}}
        shell: bash
        run: |
          if [ -z "$secr" ]; then echo "NULL"; else echo "Not NULL"; fi
  ############################################
  
  ############################################
  notExist:
    name: "Secret shouldn't exist"
    runs-on: ubuntu-latest
    steps:
      - env:
          secr: ${{secrets.DO_NOT_EXIST}}
        shell: bash
        run: |
          if [ -z "$secr" ]; then echo "NULL"; else echo "Not NULL"; fi
  ############################################


  ############################################
  exist-v2:
    name: "All secret should exist"
    runs-on: ubuntu-latest
    steps:
      - env:
          secr: ${{secrets.EXIST}}
          secr2: ${{secrets.EXIST2}}
          secr3: ${{secrets.EXIST3}}
        shell: bash
        run: |
          check () {
            result=1; for var in $*; do if [ -z "${!var}" ]; then result=0; fi; done;
          }
          check "secr" "secr3" "secr2"
          echo "$result"
  ############################################

  ############################################
  notExist-v2:
    name: "At least one shouldn't exist"
    runs-on: ubuntu-latest
    steps:
      - env:
          secr: ${{secrets.DO_NOT_EXIST}}
          secr2: ${{secrets.EXIST2}}
          secr3: ${{secrets.EXIST3}}
        shell: bash
        run: |
          check () {
            result=1; for var in $*; do if [ -z "${!var}" ]; then result=0; fi; done;
          }
          check "secr" "secr3" "secr2"
          echo "$result"
  ############################################


  ############################################
  check-multiple-secrets:
    name: Checking available secrets
    runs-on: ubuntu-latest
    outputs:
      runOK1: ${{ steps.all.outputs.runOK1 }}
      runFail: ${{ steps.all.outputs.runFail }}
      runOK2: ${{ steps.all.outputs.runOK2 }}
      
    env:
      secr: ${{secrets.DO_NOT_EXIST}}
      secr2: ${{secrets.EXIST2}}
      secr3: ${{secrets.EXIST3}}

    steps:
      - name: "Checking..."
        id: all
        shell: bash
        run: |
          check () {
            result=1; for var in $*; do if [ -z "${!var}" ]; then result=0; fi; done;
          }
          
          check "secr2"
          echo "runOK1=$result" >> "$GITHUB_OUTPUT"
          
          check "secr3" "secr"
          echo "runFail=$result" >> "$GITHUB_OUTPUT"
          
          check "secr2" "secr3"
          echo "runOK2=$result" >> "$GITHUB_OUTPUT"

  runOK1:
    name: "run #1 OK!"
    needs: check-multiple-secrets
    if: needs.check-multiple-secrets.outputs.runOK1 == 1}}
    runs-on: ubuntu-latest
    steps:
      - name: OK!
        run: exit 0

  runOK2:
    name: "run #2 OK!"
    needs: check-multiple-secrets
    if: needs.check-multiple-secrets.outputs.runOK2 == 1
    runs-on: ubuntu-latest
    steps:
      - name: OK!
        run: exit 0

  runFail:
    name: "run should fail"
    needs: check-multiple-secrets
    if: needs.check-multiple-secrets.outputs.runFail == 1}}
    runs-on: ubuntu-latest
    steps:
      - name: ";("
        run: exit -1
##############################################
